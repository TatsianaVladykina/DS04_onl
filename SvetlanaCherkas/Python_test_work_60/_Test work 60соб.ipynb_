{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1hlPgC2dGia-Olepv0MKeH-mmKaTwhZaP","timestamp":1674841928137}],"collapsed_sections":["Fp2F-BWVmkeM","a3Q1ofvps082","_LV-5KIwoL0B","IMFXiyUFp3wW","cSDo59lmqVsE","uGvsq9aMLthY","hq-aNhzCMbLM","TB7wDEFoMzLd","IBbwhGwSM29y","RP052wQTM7vP","VybCgiK8NOoN","AvCB5TYvNVSL","VtYH9vilZ7tF","uZrC2sVpaHGw","-IbM1QZDeBly","cI5Luaz8edyC","lcLVggsdfKTk","7F5CkPusfaKb","S7HUc6xQfsaH","SqrGtYVSf3KU","uHbOgGv6gIDq","S2UopEI-gQuT","wSk4DcNAiiWM","KAaUDD3jkr_A","BoWhgm2vlLU_","ENvJqJqImPoh","oWwmsl0smf5B","Cbf2FmdRnoes","SfEaf1gFnxdc","alWnieFlpGUg","a0U1yL6btr7a","mwolhKvNvOIt","BBlL0QvSvgjW","sZWgQwhSv3yN","G1bhmdNixiKM"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Data types**"],"metadata":{"id":"OkHVYFktjlc6"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"eXbptqTQXAZJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## **Numeric data types**"],"metadata":{"id":"AoauScZ3nufy"}},{"cell_type":"markdown","source":["### 1. Перечислите операторы и случаи которые возвращают float. (минимум 5)"],"metadata":{"id":"jyriB8gPlU0o"}},{"cell_type":"code","source":["1.1 + 1.2 # example"],"metadata":{"id":"niOKMlv4lXHW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674842001535,"user_tz":-180,"elapsed":281,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"585d215d-6625-4508-f6d2-967405cb9e0a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2.3"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["1 + 2.0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5OlNv4vNYgXY","executionInfo":{"status":"ok","timestamp":1674842354239,"user_tz":-180,"elapsed":296,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"2817644a-6af7-4ec4-cb52-cc0a4a1d1c01"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3.0"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["2.0 - 3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1ypTGzZlYj9G","executionInfo":{"status":"ok","timestamp":1674842369218,"user_tz":-180,"elapsed":226,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"c3d1887b-5033-4f2c-c628-49b9f75642bd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-1.0"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["10.0 / 2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vDDVc1C0YqAm","executionInfo":{"status":"ok","timestamp":1674842396358,"user_tz":-180,"elapsed":327,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"ea962b65-9137-447d-baab-16fc892efbd1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5.0"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["5 * 3.0"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P91RRVcBYp6j","executionInfo":{"status":"ok","timestamp":1674842412850,"user_tz":-180,"elapsed":213,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"5f3abd2c-3767-4ddf-eada-d6233fa5ccb6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["15.0"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":[],"metadata":{"id":"apkpBaDmYpyF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 2. Создайте float 4мя способами"],"metadata":{"id":"NvAD3Q2nmLpP"}},{"cell_type":"code","source":["1.0 # example 1"],"metadata":{"id":"qaQWqI2amTDU","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674841998373,"user_tz":-180,"elapsed":229,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"bed4723f-98e9-4aaf-9349-cf805d7aaab0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["float('15')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kzoktb9oY1B5","executionInfo":{"status":"ok","timestamp":1674842595685,"user_tz":-180,"elapsed":208,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"525ae647-eb4e-48d3-9ae9-d901f6372e8b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["15.0"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["float(14)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cZQHji_kZg_d","executionInfo":{"status":"ok","timestamp":1674842631264,"user_tz":-180,"elapsed":226,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"cff7a6fd-bb3f-46cd-9290-234922366b55"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["14.0"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["float(14.6)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XNDhw7DpZg9O","executionInfo":{"status":"ok","timestamp":1674842669624,"user_tz":-180,"elapsed":218,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"2bf2e4c5-1aea-49f9-ce48-bdb2ad7d6df4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["14.6"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["### 3. Какую альтернативу float вы знаете?"],"metadata":{"id":"3KMqasKOljcL"}},{"cell_type":"code","source":["decimal"],"metadata":{"id":"pjY4LeSFlkw9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 4. Приведите пример не корректного поведения float?"],"metadata":{"id":"oVVHifSOloE6"}},{"cell_type":"code","source":[],"metadata":{"id":"7liPORAll710"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 5. Создайте бесконечность и ничто."],"metadata":{"id":"Jpzbl5Jel8B5"}},{"cell_type":"code","source":["float('inf')\n","  inf"],"metadata":{"id":"fKwL3zT93et1","colab":{"base_uri":"https://localhost:8080/","height":130},"executionInfo":{"status":"error","timestamp":1674891897488,"user_tz":-180,"elapsed":451,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"ec0b6934-eacb-4af8-cb8e-f1beeaec4348"},"execution_count":null,"outputs":[{"output_type":"error","ename":"IndentationError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-4-a0acb14e2c98>\"\u001b[0;36m, line \u001b[0;32m2\u001b[0m\n\u001b[0;31m    inf\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"]}]},{"cell_type":"code","source":["float('nan')\n"],"metadata":{"id":"x9vN6CWpVkjp"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 6. Округлите значение x до 3 знаков после запятой?"],"metadata":{"id":"Fp2F-BWVmkeM"}},{"cell_type":"code","source":["x = 42.041567343252365345\n","round(x, 3)"],"metadata":{"id":"tNcOpFRcnCoZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674843436980,"user_tz":-180,"elapsed":216,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"95d15bbe-a18d-47c6-95d0-e5c022e3f2bf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["42.042"]},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["### 7. Обьясните как так получилось в примере ниже?"],"metadata":{"id":"_Au1LC2snPGh"}},{"cell_type":"code","source":["x = round(5.5)\n","print(x)\n","y = round(42.5)\n","print(y) # округляет к ближайшему четному числу"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cVY9sOLlnYRo","executionInfo":{"status":"ok","timestamp":1674843706845,"user_tz":-180,"elapsed":283,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"3c20d7bc-db18-408f-f4cc-dd4fea48b011"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["6\n","42\n"]}]},{"cell_type":"markdown","source":["### 8. Приведите примеры всего что эквивалентно 1"],"metadata":{"id":"yWlezVKEn61K"}},{"cell_type":"code","source":["1.0 (float)\n","1 (int)\n","1+0j (complex)\n","Decimal('1') \n"],"metadata":{"id":"wTmiWlGnoEt0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 9. Напишите число 248 в 16-ричном и бинарном виде"],"metadata":{"id":"3iT3A4z-spKi"}},{"cell_type":"code","source":["hex(248)"],"metadata":{"id":"6MJaBBvHs0XC","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1674843978460,"user_tz":-180,"elapsed":227,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"5bb2c06b-dba8-4474-9da5-e44cb8788113"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'0xf8'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["hex_num = \"16\"\n","dec_num = int(hex_num, 16)\n","print(dec_num) #22"],"metadata":{"id":"W9bNJZHbafyP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["bin(248)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"vepp09MWew69","executionInfo":{"status":"ok","timestamp":1674843991104,"user_tz":-180,"elapsed":238,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"6d73b40f-b21a-4f34-b9e8-6adcb3d3cea9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'0b11111000'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["x = 248\n","format(x, 'x')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"-UV1tTJ0e2n8","executionInfo":{"status":"ok","timestamp":1674844064750,"user_tz":-180,"elapsed":214,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"72202200-2350-4860-8443-23469b8c3ace"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'f8'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["format(x, 'b')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"kGgxBapPew2b","executionInfo":{"status":"ok","timestamp":1674844102092,"user_tz":-180,"elapsed":214,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"9f63d37b-3456-4f83-b54d-04bbf5d383df"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'11111000'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["### 10. Преобразуйте числа cabaca и 101010 в 10ричные числа"],"metadata":{"id":"a3Q1ofvps082"}},{"cell_type":"code","source":["int('cabaca', base=16)"],"metadata":{"id":"oiEC1Pfbt8PM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674844638175,"user_tz":-180,"elapsed":2,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"de0ef241-f5c1-4d95-ae0d-61efc436f2dc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["13286090"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["int('101010', base=2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fUW6SlfRhUcW","executionInfo":{"status":"ok","timestamp":1674844668824,"user_tz":-180,"elapsed":2,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"bf13323e-a81b-4343-ca8d-35f32518b210"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["42"]},"metadata":{},"execution_count":49}]},{"cell_type":"markdown","source":["### 11*. Кароче, написал я генератор картинок с кастомными размерами x и y. Собираюсь запихать их в один колаж методом объединения матриц картинок, но это не суть. Вопрос вот в чём - допустим у меня 5 картинок 64х256, какого минимального размера будет колаж если учитывать что я хочу минимизировать к-во пустого пространства."],"metadata":{"id":"_LV-5KIwoL0B"}},{"cell_type":"code","source":["n = 5\n","x = 64\n","y = 256\n","\n","collage_x = (64*5, 256)\n","collage_y = (64, 256*5)\n","collage_x"],"metadata":{"id":"0kujTlnRpAPx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674845067727,"user_tz":-180,"elapsed":213,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"0e435c89-08c2-4e80-cfbd-76c42563e541"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(320, 256)"]},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["collage_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6GIAx53Fi7rV","executionInfo":{"status":"ok","timestamp":1674845084836,"user_tz":-180,"elapsed":2,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"6b922803-5bf7-4618-cb2d-275e5172c3b0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(64, 1280)"]},"metadata":{},"execution_count":60}]},{"cell_type":"markdown","source":["### 12**. Каким типом данных можно напугать технического специалиста на собеседовании?"],"metadata":{"id":"IMFXiyUFp3wW"}},{"cell_type":"code","source":["..."],"metadata":{"id":"M667wwxiqEef"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## **Collections**"],"metadata":{"id":"_NlPnC4vqKIC"}},{"cell_type":"markdown","source":["### 1. Копируйте лист data 5ю способами"],"metadata":{"id":"cSDo59lmqVsE"}},{"cell_type":"code","source":["data = [1,2,3,4,5]\n","y = data.copy()\n","y"],"metadata":{"id":"TYMJJhkxqU0r","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674845794662,"user_tz":-180,"elapsed":210,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"e3252feb-72e4-48ae-e540-e7a022df0a68"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 2, 3, 4, 5]"]},"metadata":{},"execution_count":91}]},{"cell_type":"code","source":["a = data\n","a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xow7rYrQjUoY","executionInfo":{"status":"ok","timestamp":1674846029180,"user_tz":-180,"elapsed":215,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"af85427b-fb8a-439f-8054-9d93cffc4833"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 2, 3, 4, 5]"]},"metadata":{},"execution_count":95}]},{"cell_type":"code","source":["x = data[:]\n","x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zT0gdiv1jUlm","executionInfo":{"status":"ok","timestamp":1674845864667,"user_tz":-180,"elapsed":2,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"b22290e3-36fe-4379-c60d-50bd6a2c3b31"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 2, 3, 4, 5]"]},"metadata":{},"execution_count":94}]},{"cell_type":"code","source":["import copy\n","data = [1,2,3,4,5]\n","data1 = copy.deepcopy(data)\n","data1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jzfJ3ReKksFc","executionInfo":{"status":"ok","timestamp":1674846195911,"user_tz":-180,"elapsed":223,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"81d004c2-0438-455b-bfc4-4afcb1da7477"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 2, 3, 4, 5]"]},"metadata":{},"execution_count":100}]},{"cell_type":"code","source":["data2 = copy.copy(data)\n","data2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xC3CQkNcnN5N","executionInfo":{"status":"ok","timestamp":1674846219411,"user_tz":-180,"elapsed":210,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"2ccf7d9c-17dc-409a-ff40-842e1bcef6b8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 2, 3, 4, 5]"]},"metadata":{},"execution_count":101}]},{"cell_type":"markdown","source":["### 2. Перенесите данные из raw_data в data что бы при этом data_id(ячейка памяти) data не изменилась. Без циклов и дополнительных ф-ций."],"metadata":{"id":"Fei-GlOOq5iG"}},{"cell_type":"code","source":["raw_data = [1,2,3,4,6]\n","data = []\n","data_id = id(data)"],"metadata":{"id":"TIoHcTwhrHfv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data = raw_data\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gsJTlL_1neD2","executionInfo":{"status":"ok","timestamp":1674846308292,"user_tz":-180,"elapsed":226,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"7219b101-7868-4e22-b1e3-710dce79dd1f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 2, 3, 4, 6]"]},"metadata":{},"execution_count":106}]},{"cell_type":"code","source":["id(data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EJ9eXDEJnd85","executionInfo":{"status":"ok","timestamp":1674846333938,"user_tz":-180,"elapsed":208,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"68630018-06ba-4763-9192-8bff35fa5664"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["140245496958784"]},"metadata":{},"execution_count":107}]},{"cell_type":"code","source":["id(raw_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_2oEgLiZnd3t","executionInfo":{"status":"ok","timestamp":1674846348912,"user_tz":-180,"elapsed":206,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"8201c7e9-4a28-4ad0-e9e4-6342887a32c2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["140245496958784"]},"metadata":{},"execution_count":108}]},{"cell_type":"markdown","source":["### 3. Напишите ф-цию которая будет принимать на вход любой базовый тип данных и возвращать True если тип данных изменяемый и False если нет.(минимум 2мя способами)"],"metadata":{"id":"edOrongSro9G"}},{"cell_type":"code","source":["def is_tip(x):\n","    return type(x) in [list, set, dict]\n","\n","is_tip({})"],"metadata":{"id":"VQCjcwFPsDHz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674846779099,"user_tz":-180,"elapsed":215,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"3b4b12b8-95fb-4016-8936-d61fe2088153"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["def is_tip(x):\n","    return isinstance(x, (list, set, dict))\n","\n","is_tip({})\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0amnyP5ZpcfU","executionInfo":{"status":"ok","timestamp":1674846890412,"user_tz":-180,"elapsed":209,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"e1a5a943-372c-4b94-e4a6-74acf73087d7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":124}]},{"cell_type":"markdown","source":["### 4. Форматируйте строку всеми извесными вами способами (минимум 3мя)"],"metadata":{"id":"24irUYUAsQC0"}},{"cell_type":"code","source":["#Использование f-строк:\n","name = \"John\"\n","age = 30\n","print(f\"My name is {name} and I am {age} years old.\")"],"metadata":{"id":"OH8j3SHrsPFc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674847236393,"user_tz":-180,"elapsed":255,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"237ac800-0eea-47af-aa57-5bc5af0cadf6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["My name is John and I am 30 years old.\n"]}]},{"cell_type":"code","source":["#Использование конкатенации строк:\n","name = \"John\"\n","age = 30\n","\"My name is \" + name + \" and I am \" + str(age) + \" years old.\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"wNFoJPkNrMKV","executionInfo":{"status":"ok","timestamp":1674847308273,"user_tz":-180,"elapsed":228,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"2f6083aa-a835-4155-8394-861a4b88b8b5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'My name is John and I am 30 years old.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":128}]},{"cell_type":"code","source":["#Использование метода .join():\n","name = \"John\"\n","age = 30\n","\" \".join([\"My\", \"name\", \"is\", \"John\", \"and\", \"I\", \"am\", \"30\", \"years\", \"old.\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"aQMUmZD7rfpi","executionInfo":{"status":"ok","timestamp":1674847477070,"user_tz":-180,"elapsed":220,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"bd07f364-63ee-47b1-fe16-a0aedbbc2777"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'My name is John and I am 30 years old.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":134}]},{"cell_type":"code","source":["#Использование метода %:\n","name = \"John\"\n","age = 30\n","\"My name is %s and I am %d years old.\" % (name, age)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"VYmgUZQisDRk","executionInfo":{"status":"ok","timestamp":1674847532111,"user_tz":-180,"elapsed":223,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"54c5e0e0-dfe0-4b85-ef00-791743245b87"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'My name is John and I am 30 years old.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":139}]},{"cell_type":"markdown","source":["### 5. Уберите из строки всё кроме символов латиницы и пробелов."],"metadata":{"id":"4zsp8HKMuC11"}},{"cell_type":"code","source":["import re\n","data = \"#pеально789?%9u8867t*:;№89i№:№85!№''n &^%%$^@#$%^&*(#hренововсёспитоном\\\n","        (98%6276*^$^%22u#тобiпзданасобесе^%#879632l)_)=8=0787#лoл!!1!!11!!\"\n","\n","reg = re.compile('[^a-zA-Z ]')\n","print(reg.sub('', data))        "],"metadata":{"id":"b7WrLULOuPxn","executionInfo":{"status":"ok","timestamp":1674980141658,"user_tz":-180,"elapsed":354,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"51bc98db-8560-4ac3-f832-93a3c57596b7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["putin h        uilo\n"]}]},{"cell_type":"markdown","source":["### 6. Поднимите заглавную букву во всех словах которые заканчиваются на !. ! удалите, но только у этих слов."],"metadata":{"id":"iL_GAflmwCIa"}},{"cell_type":"code","source":["s = \"glory! to ukraine!! putler is a fucking fascist. the! \\\n","court is waiting in the! hague!! send! the mustachioed shithead! there as well.\\\n","live! belarus!!\"\n","\n","words = s.split(\" \")\n","for i in range(len(words)):\n","    if words[i].endswith(\"!\"):\n","        words[i] = words[i].capitalize().replace(\"!\", \"\")\n","        \n","new_s = \" \".join(words)\n","print(new_s)\n"],"metadata":{"id":"XFmxlSTPwYsL","executionInfo":{"status":"ok","timestamp":1674911886850,"user_tz":-180,"elapsed":239,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"8d2e09f8-9df4-4e20-a004-0d12a4911177"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Glory to Ukraine putler is a fucking fascist. The court is waiting in The Hague Send the mustachioed Shithead there as Well.live Belarus\n"]}]},{"cell_type":"markdown","source":["### 7. Приведите примеры ВСЕХ(!) методов tuple."],"metadata":{"id":"YIfboBWIxzNZ"}},{"cell_type":"code","source":["#count() - возвращает количество элементов в кортеже, соответствующих заданному значению\n","data = ('Finn', 'Jake', 'BiMo', 'Marceline', 'Princess Bubblegum', 'BiMo', 'Finn', 'Finn')\n","print(data.count('Finn'))\n","\n","#index() - возвращает индекс первого элемента в кортеже, соответствующего заданному значению\n","print(data[1])\n","\n","print(data[0:3])\n","print(len(data))\n","\n","#Note: Кортежи не имеют методов изменения содержимого, поэтому нет методов для добавления, удаления или изменения элементов в кор"],"metadata":{"id":"QGkzhY9Ky0x4","executionInfo":{"status":"ok","timestamp":1674893809382,"user_tz":-180,"elapsed":243,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"e3fc7ddc-a5b0-43fc-989a-f1e66886e7e5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3\n","Jake\n","('Finn', 'Jake', 'BiMo')\n","8\n"]}]},{"cell_type":"code","source":["#преобразование tuple in str\n","data = ('Breath', ' ', 'of', ' ', 'the', ' ', 'Wild')\n","data = ''.join(data)\n","print(data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SC3Bxq08bQKl","executionInfo":{"status":"ok","timestamp":1674893441833,"user_tz":-180,"elapsed":236,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"363eea16-ff86-43c3-8689-24b03c1efcf1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Breath of the Wild\n"]}]},{"cell_type":"code","source":["#преобразование tuple in list\n","lst = ('Breath', ' ', 'of', ' ', 'the', ' ', 'Wild')\n","lst = list(lst)\n","print(lst)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N_uvmALUbfnH","executionInfo":{"status":"ok","timestamp":1674893545541,"user_tz":-180,"elapsed":214,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"e99bc809-d766-425e-b883-398d0cb47a93"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Breath', ' ', 'of', ' ', 'the', ' ', 'Wild']\n"]}]},{"cell_type":"code","source":["#преобразования tuple in dict придётся применить — генератор словарей:\n","data = (('Eric', 65000), ('Stephany', 87000))\n","data = dict((x, y) for x, y in data)\n","print(data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yjcSRW57cBG8","executionInfo":{"status":"ok","timestamp":1674893703168,"user_tz":-180,"elapsed":212,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"b08b7056-230b-40b4-dcb7-4bf683152c30"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'Eric': 65000, 'Stephany': 87000}\n"]}]},{"cell_type":"markdown","source":["### 8. В качестве ключа у словаря можно много чего использовать, приведите самый необычный и не логичный пример на ваш взгляд. "],"metadata":{"id":"a9GIGDmTy096"}},{"cell_type":"code","source":["'''Один из примеров необычного и не логичного использования ключа словаря может быть использование функции в качестве ключа. \n","Функция не может быть использована в качестве ключа, поскольку она не является хешируемым типом данных, \n","но есть способы обхода этого ограничения, например с помощью functools.cmp_to_key или operator.methodcaller'''\n","\n","import functools\n","\n","def my_key(x):\n","    return x % 2\n","\n","my_dict = {functools.cmp_to_key(my_key): 'value'}\n","'''Такой пример становится не логичным и не используемым, поскольку ключи словаря должны быть неизменяемыми и уникальными, \n","а использование функции в качестве ключа не обязательно даст таковые результаты.'''"],"metadata":{"id":"eFnmNt9SzM0Q","colab":{"base_uri":"https://localhost:8080/","height":235},"executionInfo":{"status":"error","timestamp":1674912007982,"user_tz":-180,"elapsed":228,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"0597e22d-aad7-48a9-8efe-3750a21fe063"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-12-f791fbbb1211>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      8\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mx\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 10\u001b[0;31m \u001b[0mmy_dict\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0mfunctools\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcmp_to_key\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmy_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m'value'\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     11\u001b[0m '''Такой пример становится не логичным и не используемым, поскольку ключи словаря должны быть неизменяемыми и уникальными, \n\u001b[1;32m     12\u001b[0m а использование функции в качестве ключа не обязательно даст таковые результаты.'''\n","\u001b[0;31mTypeError\u001b[0m: unhashable type: 'functools.KeyWrapper'"]}]},{"cell_type":"code","source":[],"metadata":{"id":"F_rJRriMiBcm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 9. Объясните пример ниже. Почему так вышло?"],"metadata":{"id":"TsZpH_NezbrG"}},{"cell_type":"code","source":["gone_for_the_bread = {\n","    True: \"mom\",\n","    1.0: \"bro\",\n","    1: \"Father\",\n","}\n","print(gone_for_the_bread)\n","# Сам ключ не перезаписывается"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Kl6EGB5uzoTb","executionInfo":{"status":"ok","timestamp":1674894010495,"user_tz":-180,"elapsed":213,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"9d197a47-5af0-4b9f-994d-167f88f48c5d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{True: 'Father'}\n"]}]},{"cell_type":"markdown","source":["### 10. Создайте код по которому вы сможете доказать изменяемостб/неизменяемостб типов данных."],"metadata":{"id":"JHMO6vwJLJdq"}},{"cell_type":"code","source":["# Пример изменяемого типа данных - список\n","my_list = [1, 2, 3]\n","print(\"Исходный список:\", my_list)\n","\n","my_list.append(56)  # Добавляем элемент в список\n","print(\"Измененный список:\", my_list)\n"],"metadata":{"id":"NeStOxWuLbHi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674913259962,"user_tz":-180,"elapsed":233,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"4dc9e195-381b-41d8-ca5c-73e763cf17f8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Исходный список: [1, 2, 3]\n","Измененный список: [1, 2, 3, 56]\n"]}]},{"cell_type":"code","source":["# Пример изменяемого типа данных - словарь\n","my_dict = {\"a\": 1, \"b\": 2}\n","print(\"Исходный словарь:\", my_dict)\n","\n","my_dict[\"c\"] = 3  # Добавляем элемент в словарь\n","print(\"Измененный словарь:\", my_dict)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0tCZN-2Zn8kN","executionInfo":{"status":"ok","timestamp":1674913513380,"user_tz":-180,"elapsed":267,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"6f67f78c-f478-48dc-f8db-27087ccce106"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Исходный словарь: {'a': 1, 'b': 2}\n","Измененный словарь: {'a': 1, 'b': 2, 'c': 3}\n"]}]},{"cell_type":"code","source":["#Пример неизменяемого типа данных - кортеж\n","my_tuple = (1, 2, 3)\n","print(\"Исходный кортеж:\", my_tuple)\n","\n","try:\n","    my_tuple.append(4)  # Попытка добавить элемент в кортеж\n","except AttributeError as e:\n","    print(\"Ошибка:\", e)\n","print(\"Измененный кортеж:\", my_tuple)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JgEFa5DvnD0j","executionInfo":{"status":"ok","timestamp":1674913293077,"user_tz":-180,"elapsed":279,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"895f865c-0241-4323-d09f-6418727fe0d7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Исходный кортеж: (1, 2, 3)\n","Ошибка: 'tuple' object has no attribute 'append'\n","Измененный кортеж: (1, 2, 3)\n"]}]},{"cell_type":"code","source":["#Пример неизменяемого типа данных - кортеж\n","my_tuple = (1, 2, 3)\n","print(\"Исходный кортеж:\", my_tuple)\n","my_tuple.append(4) \n","print(\"Измененный кортеж:\", my_tuple)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"id":"HXo5cxBPng1T","executionInfo":{"status":"error","timestamp":1674913440257,"user_tz":-180,"elapsed":232,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"0e34f13f-9bce-4d68-f60f-e2cd60cd2a25"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Исходный кортеж: (1, 2, 3)\n"]},{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-16-d345305e914d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mmy_tuple\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Исходный кортеж:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmy_tuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mmy_tuple\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Измененный кортеж:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmy_tuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: 'tuple' object has no attribute 'append'"]}]},{"cell_type":"code","source":["# Пример неизменяемого типа данных - строка\n","my_string = \"abc\"\n","print(\"Исходная строка:\", my_string)\n","\n","try:\n","    my_string[2] = \"d\"  # Попытка изменить элемент строки\n","except TypeError as e:\n","    print(\"Ошибка:\", e)\n","print(\"Измененная строка:\", my_string)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QO1jRH2doLkX","executionInfo":{"status":"ok","timestamp":1674913571143,"user_tz":-180,"elapsed":228,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"cce030c8-2cab-4998-afaf-d360f75979b1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Исходная строка: abc\n","Ошибка: 'str' object does not support item assignment\n","Измененная строка: abc\n"]}]},{"cell_type":"code","source":["my_string = \"abc\"\n","print(\"Исходная строка:\", my_string)\n","my_string[2] = \"d\" "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":217},"id":"8bPvMlzhoRKY","executionInfo":{"status":"error","timestamp":1674913597569,"user_tz":-180,"elapsed":231,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"2f6714e6-f94d-4bf9-cd23-a12a29dbbf03"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Исходная строка: abc\n"]},{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-19-49fc458f5fba>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mmy_string\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"abc\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Исходная строка:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmy_string\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mmy_string\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"d\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'str' object does not support item assignment"]}]},{"cell_type":"markdown","source":["### 11*. Напишите код создающий что-то наподобии того что указано ниже(матрица многомерная(не фильм))"],"metadata":{"id":"53bJ1fwgKSlk"}},{"cell_type":"code","source":["matrix = [[[0 for _ in range(3)] for _ in range(3)] for _ in range(3)]\n","print(matrix*3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6Pl8eUaVpMu0","executionInfo":{"status":"ok","timestamp":1674914229790,"user_tz":-180,"elapsed":233,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"5c66d2db-cd64-4c2a-e4ba-7baa724b0d5e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]\n"]}]},{"cell_type":"code","source":["[[[[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n","  [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n","  [[0, 0, 0], [0, 0, 0], [0, 0, 0]]],\n"," [[[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n","  [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n","  [[0, 0, 0], [0, 0, 0], [0, 0, 0]]],\n"," [[[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n","  [[0, 0, 0], [0, 0, 0], [0, 0, 0]],\n","  [[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]"],"metadata":{"id":"89kVNff8KdK3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 12**. Приведите примеры 3 задач с изменяемыми типами данных которые в теории могут попасться на собеседовании(на ваш взгляд)"],"metadata":{"id":"uGvsq9aMLthY"}},{"cell_type":"code","source":[],"metadata":{"id":"2ywZqsoZMTnm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## **Functions**"],"metadata":{"id":"RBDS7nW7MTGC"}},{"cell_type":"markdown","source":["### 1. Создайте код с логичным приминением с ф-ции enumerate"],"metadata":{"id":"hq-aNhzCMbLM"}},{"cell_type":"markdown","source":["В данном примере мы используем функцию enumerate для перебора элементов списка fruits. Каждый элемент списка сопоставляется с его индексом и печатается в виде \"номер. элемент\" (например \"1. apple\")."],"metadata":{"id":"-9nybHr9nu7l"}},{"cell_type":"code","source":["a = ['apple', 'banana', 'cherry']\n","\n","for index, fruit in enumerate(a):\n","    print(f'{index+1}. {fruit}')"],"metadata":{"id":"ylZxs6rmMzCT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674930141610,"user_tz":-180,"elapsed":2,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"5b4f3381-723d-4a79-b8c6-d39c9383efaf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1. apple\n","2. banana\n","3. cherry\n"]}]},{"cell_type":"markdown","source":["### 2. Создайте код с логичным приминением с ф-ции zip"],"metadata":{"id":"TB7wDEFoMzLd"}},{"cell_type":"markdown","source":["В этом примере, функция zip создает итератор, который объединяет элементы списков names и ages в кортежи. Каждая итерация цикла for использует очередной кортеж, чтобы вывести имя и возраст человека."],"metadata":{"id":"s_X6MokZn9AS"}},{"cell_type":"code","source":["names = ['Alice', 'Bob', 'Charlie']\n","ages = [25, 30, 35]\n","\n","for name, age in zip(names, ages):\n","    print(f\"{name} is {age} years old.\")"],"metadata":{"id":"RmksC3h4M2lg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674930301493,"user_tz":-180,"elapsed":333,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"be709ec3-3deb-4d6a-d557-a09a6c98b94a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Alice is 25 years old.\n","Bob is 30 years old.\n","Charlie is 35 years old.\n"]}]},{"cell_type":"markdown","source":["### 3. Создайте код с логичным приминением с ф-ции map"],"metadata":{"id":"IBbwhGwSM29y"}},{"cell_type":"markdown","source":["В данном примере функция double принимает один аргумент x и удваивает его значение. Затем функция map применяется к списку numbers и функции double, чтобы создать новый список doubled_numbers, в котором каждое значение из numbers удвоено.\n","\n","\n","\n","\n"],"metadata":{"id":"TQq87EBRpEYH"}},{"cell_type":"code","source":["def f_double(x):\n","    return x*2\n","\n","num = [1, 2, 3, 4, 5]\n","doubl_num = map(f_double, num)\n","list(doubl_num)\n"],"metadata":{"id":"DTB9AYdEM7le","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674931072348,"user_tz":-180,"elapsed":302,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"de62b972-2452-418c-fbb7-8d10e482de54"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[2, 4, 6, 8, 10]"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["#Этот map возводит в квадрат каждый элемент:\n","sq = map(lambda x: x * x, [0, 1, 2, 3, 4])\n","\n","list(sq)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cP2-tOnZqljL","executionInfo":{"status":"ok","timestamp":1674931252884,"user_tz":-180,"elapsed":2,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"8062aef7-c732-4ed7-8de1-c12cd772a649"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0, 1, 4, 9, 16]"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["#Простой map, принимающий список имён и возвращающий список длин:list(sq)\n","name_lengths = map(len, ['Маша', 'Петя', 'Вася'])\n","\n","list(name_lengths)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z8EJcxTnrCfg","executionInfo":{"status":"ok","timestamp":1674931182362,"user_tz":-180,"elapsed":557,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"4af1d29a-1b10-4a42-965b-3bbbf46a8ff4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[4, 4, 4]"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["names = ['Маша', 'Петя', 'Вася']\n","\n","secret_names = map(hash, names)\n","list(secret_names)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oHeYEcjIsBLV","executionInfo":{"status":"ok","timestamp":1674931368078,"user_tz":-180,"elapsed":2,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"168f8648-1e28-4f6e-f24b-0b7f0b8af3f5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1536369094923567781, -8096380272738498293, -2650619274843976820]"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["hash('Маша')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MByMZGAosJo5","executionInfo":{"status":"ok","timestamp":1674931408945,"user_tz":-180,"elapsed":535,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"dea788cf-1eab-4f0f-9ae8-3580f9438d9b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1536369094923567781"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["### 4. Создайте код с логичным приминением с ф-ции reduce"],"metadata":{"id":"RP052wQTM7vP"}},{"cell_type":"code","source":["#Возвращает произведение всех пунктов в наборе:\n","from functools import reduce\n","\n","numbers = [1, 2, 3, 4, 5]\n","\n","def multiply(x, y):\n","    return x * y\n","\n","result = reduce(multiply, numbers)\n","print(result)"],"metadata":{"id":"4qokij4oNL_U","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674930859765,"user_tz":-180,"elapsed":322,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"dd70d6d4-b767-43aa-8ca3-3aa513d09fea"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["120\n"]}]},{"cell_type":"code","source":["'''Возвращает сумму всех пунктов в наборе:\n","x – текущий пункт, а – аккумулятор. Это значение, которое возвращает выполнение lambda на предыдущем пункте. \n","reduce() перебирает все значения, и запускает для каждого lambda на текущих значениях а и х, \n","и возвращает результат в а для следующей итерации.'''\n","\n","sum = reduce(lambda a, x: a + x, [0, 1, 2, 3, 4])\n","sum"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jmgiSh03semi","executionInfo":{"status":"ok","timestamp":1674931810918,"user_tz":-180,"elapsed":302,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"b7d99886-d636-4d3c-ef7a-4d238bbedf41"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["#считает, как часто слово «капитан» встречается в списке строк:\n","lst = ['капитан джек воробей',\n","      'капитан дальнего плавания',\n","      'ваша лодка готова, капитан']\n","\n","cap_count = reduce(lambda a, x: a + x.count('капитан'), lst, 0)\n","cap_count"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2jcflDuAtDEa","executionInfo":{"status":"ok","timestamp":1674931722340,"user_tz":-180,"elapsed":2,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"4d2fcdc7-c29b-4f90-bde7-a9cf9a202a4a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","source":["### 5. Создайте код с логичным приминением с ф-ции filter"],"metadata":{"id":"VybCgiK8NOoN"}},{"cell_type":"code","source":["is_even = lambda x: x % 2 == 0\n","#Чтобы отфильтровать все числа последовательности и оставить только четные, применим функцию filter:\n","\n","seq = (1, 2, 3, 4, 5, 6, 7, 8, 9)\n","filtered = filter(is_even, seq)\n","list(filtered)"],"metadata":{"id":"iga5pHfoNT56","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674932369785,"user_tz":-180,"elapsed":304,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"5cd87fee-0e0e-409e-b88e-5da6401b3e9e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[2, 4, 6, 8]"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["#Приведенный выше фрагмент кода можно переписать по-другому, поместив лямбда функцию в качестве первого аргумента:\n","\n","filtered = iter(filter(lambda x: x % 2 == 0, seq))\n","list(filtered)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mujwiLDlwTBL","executionInfo":{"status":"ok","timestamp":1674932564595,"user_tz":-180,"elapsed":322,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"cdf356a7-8e53-42fe-fd7e-86769aebfdb7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[2, 4, 6, 8]"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["#отбираем числа > 4\n","f = filter(lambda x: x>4, seq)\n","list(f)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4PuWXucExLTt","executionInfo":{"status":"ok","timestamp":1674932759354,"user_tz":-180,"elapsed":2,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"ec8415f0-eab8-42c2-b464-ea4fadec9780"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[5, 6, 7, 8, 9]"]},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","source":["### 6. Создайте код с логичным приминением с ф-ции sorted"],"metadata":{"id":"AvCB5TYvNVSL"}},{"cell_type":"code","source":["# list   #sort работает с list и меняет первоначальный файл\n","sortList = ['a', 'cc', 'bbb']\n","sortList.sort()\n","sortList"],"metadata":{"id":"l2JHGA6uNaqC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674935657867,"user_tz":-180,"elapsed":303,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"cc871d49-2180-44c7-f984-e87ce9d8ea99"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['a', 'bbb', 'cc']"]},"metadata":{},"execution_count":85}]},{"cell_type":"code","source":["#отсортирует в обратном порядке по убыванию\n","sortList.sort(reverse=True)\n","sortList"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"auZNeZdL9NIV","executionInfo":{"status":"ok","timestamp":1674935871905,"user_tz":-180,"elapsed":315,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"73e160c5-9359-4de3-861e-7fc9ebe70b67"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['cc', 'bbb', 'a']"]},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["sortList"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NKTBTmIb79QW","executionInfo":{"status":"ok","timestamp":1674935877507,"user_tz":-180,"elapsed":289,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"2db97536-7d87-4f88-8250-4432410617b0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['cc', 'bbb', 'a']"]},"metadata":{},"execution_count":91}]},{"cell_type":"code","source":["# tuple and str    #sorted не меняет первоначальный файл\n","b=(\"ab\", \"bc\", \"wd\", \"gf\")\n","c = \"hello world\""],"metadata":{"id":"lQcCBw266ttb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Передаем tuple, а получаем list\n","sorted(b)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kmis9cae6tjt","executionInfo":{"status":"ok","timestamp":1674935400742,"user_tz":-180,"elapsed":290,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"772c851d-99f7-4f03-a8e8-9aece24c642e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['ab', 'bc', 'gf', 'wd']"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["sorted(c)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z4z39iX77Jh1","executionInfo":{"status":"ok","timestamp":1674935318812,"user_tz":-180,"elapsed":314,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"68ab79f7-8cbd-41f6-dd5e-9f0674e5065f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[' ', 'd', 'e', 'h', 'l', 'l', 'l', 'o', 'o', 'r', 'w']"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["b"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YtgXR0rt7mUo","executionInfo":{"status":"ok","timestamp":1674935467749,"user_tz":-180,"elapsed":3,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"19c1fa59-8fd4-4707-e6d3-09daba2956cc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('ab', 'bc', 'wd', 'gf')"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["c"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"O2ut39767xEI","executionInfo":{"status":"ok","timestamp":1674935475974,"user_tz":-180,"elapsed":305,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"6608eeea-832a-4cab-ce9b-b277636f3787"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'hello world'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["#отсортирует в обратном порядке по убыванию\n","a=[1,-45,3,2,100,-4]\n","a = sorted(a, reverse=True)\n","a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jKJxr_978zEF","executionInfo":{"status":"ok","timestamp":1674935782284,"user_tz":-180,"elapsed":300,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"54508219-5e4b-4ac7-9e1f-55b2bc06d584"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[100, 3, 2, 1, -4, -45]"]},"metadata":{},"execution_count":88}]},{"cell_type":"markdown","source":["### 7. Передайте весь контент data как именнованные параметры в ф-цию f и доработайте её что бы она возвращала информацию."],"metadata":{"id":"EqWihCOSNeK9"}},{"cell_type":"code","source":["data = {\n","    'name': \"Sania\",\n","    'surname': \"Tarakanov\",\n","    'country': \"Belarussia\",\n","    'age': 'still haven\\'t decided how much',\n","    'role': \"village idiot\",\n","}\n","\n","def f1(name=\"Nick\", surname=\"Wasovski\", country=\"Poland\", age=\"34\", role='spy'):\n","    template =  (\"\"\"Атчот самому себе №83.3 (не отдаётся) Перахвачан разгавор гражданина {surname} {name} \n","    c неустаноуленным лицом. Извесно што гэтот так называемый {name} работает\n","    на вражеское гасударство {country} на должности {role}. Так же мы знаем что этому негадзяю {age} лет.\n","    В перахвачаном разгаворе очень многа информации.\n","    Будет оооочэнь интэрэсно.\"\"\")\n","    return template.format(name=\"Nick\", surname=\"Wasovski\", country=\"Poland\", age=\"34\", role='spy')\n","f1(**data)    "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vd8MmClUZWj2","executionInfo":{"status":"ok","timestamp":1674988392495,"user_tz":-180,"elapsed":202,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"b034455b-6000-4b78-84a0-06f5eb8ac9a9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Атчот самому себе №83.3 (не отдаётся) Перахвачан разгавор гражданина Wasovski Nick \\n    c неустаноуленным лицом. Извесно што гэтот так называемый Nick работает\\n    на вражеское гасударство Poland на должности spy. Так же мы знаем что этому негадзяю 34 лет.\\n    В перахвачаном разгаворе очень многа информации.\\n    Будет оооочэнь интэрэсно.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["d = {\n","    'name': \"Sania\",\n","    'surname': \"Tarakanov\",\n","    'country': \"Belarussia\",\n","    'age': 'still haven\\'t decided how much',\n","    'role': \"village idiot\",\n","}\n","print(d)\n","def f2(name=\"Nick\", surname=\"Wasovski\", country=\"Poland\", age=\"34\", role='spy'):\n","    return (name, surname, country, age, role)\n","f2(**d)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cbTpfBasZWXd","executionInfo":{"status":"ok","timestamp":1674979499352,"user_tz":-180,"elapsed":357,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"129291ff-7173-40ae-9e53-e5a79defede0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'name': 'Sania', 'surname': 'Tarakanov', 'country': 'Belarussia', 'age': \"still haven't decided how much\", 'role': 'village idiot'}\n"]},{"output_type":"execute_result","data":{"text/plain":["('Sania',\n"," 'Tarakanov',\n"," 'Belarussia',\n"," \"still haven't decided how much\",\n"," 'village idiot')"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["d = {\n","    'name': \"Sania\",\n","    'surname': \"Tarakanov\",\n","    'country': \"Belarussia\",\n","    'age': 'still haven\\'t decided how much',\n","    'role': \"village idiot\",\n","}\n","\n","def f(dic):\n","    for key in dic:\n","        print(key)\n","\n","f(d)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-9mnP_Y8dbvy","executionInfo":{"status":"ok","timestamp":1674979495720,"user_tz":-180,"elapsed":346,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"d3798c6f-23f5-44c7-aaa3-f45777c119be"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["name\n","surname\n","country\n","age\n","role\n"]}]},{"cell_type":"markdown","source":["### 8. Бабка Лида работает в сельском магазине на должности калькулятора 2 разряда. Напишите функцию которая поможет посчитать Лиде % людей покупающий премиум напиток \"Крыжачок Голд\" за последнюю неделю если мы имеем список покупателей и непокупателей."],"metadata":{"id":"xQXS0B9sSVFL"}},{"cell_type":"code","source":["bought = [\n","    \"Гриша\",\n","    \"Шпак\",\n","    \"Шурик(долг)\",\n","    \"Головач\",\n","    \"Мак\",\n","    \"Ната Кочан\",\n","]\n","\n","not_bought = [\n","    'Мимопроходимов',\n","    'Тунеядцева',\n","    'Змагаров',\n","    'Рандомнеймов', \n","]\n","\n","def recalculate(b, not_b):\n","    total = len(bought) + len(not_bought)\n","    proc = len(bought) / total * 100\n","    return proc\n","\n","a = recalculate(b, not_b)\n","f\"{a} % людей покупали премиум напиток за последнюю неделю\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UsawjfUakQ5p","executionInfo":{"status":"ok","timestamp":1674988237575,"user_tz":-180,"elapsed":205,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"ef71ed9d-175f-465f-a906-3dd318bfb82a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'60.0 % людей покупали премиум напиток за последнюю неделю'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["### 9. Создайте функцию которая могда бы принять в себя от 0 до 100 позиционных аргументов, если аргументов меньше то ф-ция должна повести себя как обячно ведут себя ф-ции если к-во аргументов передано неверно"],"metadata":{"id":"QtmYddnmXbe7"}},{"cell_type":"code","source":["def my_func(*args):\n","  if len(args) == 0:\n","    print(\"No arguments.\")\n","  elif len(args) > 100:\n","    raise ValueError(\"Too many arguments passed, maximum is 100.\")\n","  else:\n","    print(\"Arguments passed:\", args)  \n","\n","my_func()\n","my_func(1, 2, 3, 4, 5)\n","my_func(1, 2, 3, 4, 5, 101, 102, 103) # will raise error: \"Too many arguments passed, maximum is 100.\"\n","\n","\n","\n"],"metadata":{"id":"JeWPi9i8Zfae","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1674988480240,"user_tz":-180,"elapsed":198,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"22da6fca-6db8-42c5-fdf8-ebf8af4a30df"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["No arguments.\n","Arguments passed: (1, 2, 3, 4, 5)\n","Arguments passed: (1, 2, 3, 4, 5, 101, 102, 103)\n"]}]},{"cell_type":"markdown","source":["### 10. Создайте ф-цию которая будет возвращать собственное имя"],"metadata":{"id":"syVVT0rsZgKl"}},{"cell_type":"code","source":["def return_name():\n","    return \"Good day\"\n","\n","return_name()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"UryA0UHjGr6r","executionInfo":{"status":"ok","timestamp":1675259132410,"user_tz":-180,"elapsed":256,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"2d541154-381c-4334-d7a1-ce36b6f8bd93"},"execution_count":1,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Good day'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":1}]},{"cell_type":"markdown","source":["### 11*. Создайте lambda декоратор"],"metadata":{"id":"VtYH9vilZ7tF"}},{"cell_type":"code","source":["from functools import reduce\n","\n","# Создаем lambda функцию, которая будет использоваться как декоратор\n","multiply_decorator = lambda x: lambda func: lambda *args: x * func(*args)\n","\n","# Применяем декоратор к функции, которая умножает два числа\n","@multiply_decorator(2)\n","def multiply(a, b):\n","    return a * b\n","\n","# Вызываем функцию с аргументами 3 и 4\n","result = multiply(3, 4)\n","print(result) # выводит 8\n","В данном примере, мы создали lambda-функцию multiply_decorator, которая принимает один \n","аргумент x и возвращает другую lambda-функцию, которая принимает функцию func и возвращает\n"," еще одну lambda-функцию, которая принимает неопределенное количество аргументов *args и \n"," возвращает результат умножения x на результат вызова функции func с аргументами *args. \n"," Мы используем этот декоратор с функцией multiply, которая умножает два числа, и в\n","  итоге мы получаем функцию, которая умножает два числа и умножает р"],"metadata":{"id":"a196NojRaG9b"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 12**. Напишите Декоратор который будет устанавливать Декоратор на передаваемую функцию, что бы мы могли Декорировать ф-цию пока Декорируем функцию. Больше декораторов богу декораторов. (здесь я написал Декоратор ещё раз, для большего устрашения)"],"metadata":{"id":"uZrC2sVpaHGw"}},{"cell_type":"code","source":["def put_me_inside(funk):\n","    def wrapper(*args, **kwargs):\n","        print(\"I'M MEAN AND SCARY DECORATOR!\")\n","        return f(*args, **kwargs)\n","    return wrapper"],"metadata":{"id":"1oKhN8M-bomQ","executionInfo":{"status":"ok","timestamp":1675259152499,"user_tz":-180,"elapsed":307,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}}},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":["## **Object-oriented programming**"],"metadata":{"id":"GDgD6CcWd3dr"}},{"cell_type":"markdown","source":["### 1. Создайте класс с 2мя статическим и 2мя динамическими атрибутами."],"metadata":{"id":"-IbM1QZDeBly"}},{"cell_type":"code","source":["class MyClass:\n","    static_attribute_1 = \"static attribute 1\"\n","    static_attribute_2 = \"static attribute 2\"\n","\n","    def __init__(self):\n","        self.dynamic_attribute_1 = \"dynamic attribute 1\"\n","        self.dynamic_attribute_2 = \"dynamic attribute 2\"\n","\n","a = MyClass()\n","a"],"metadata":{"id":"ehUmI7BFeVZc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1675161564849,"user_tz":-180,"elapsed":298,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"96e82380-4d08-4900-8750-4213aee7d05b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<__main__.MyClass at 0x7faa14e09d30>"]},"metadata":{},"execution_count":1}]},{"cell_type":"code","source":["'''Сперва мы создали два объекта класса Car: lada и kia. \n","Затем изменили количество колёс у объекта lada. \n","Если посмотреть на первые две строки вывода, становится ясно, \n","что данный атрибут изменился у объекта lada, но остался прежним \n","у объекта kia. Далее меняем количество колёс для всего класса Car. \n","Обратимся к последним двум строкам вывода. У объекта kia значение\n","атрибута изменилось на то, которое теперь установлено у класса, \n","однако, у объекта lada значение по-прежнему 3.'''\n","class Car:\n","    number_of_wheels = 4\n","\n","    def __init__(self, color='Red', speed=250):\n","        self.color = color\n","        self.speed = speed\n","\n","\n","lada = Car()\n","kia = Car()\n","lada.number_of_wheels = 3\n","\n","'lada:', lada.number_of_wheels\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"D29zu_AYJeAV","executionInfo":{"status":"ok","timestamp":1674990140920,"user_tz":-180,"elapsed":2,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"120caa08-825e-48b4-88ec-6e30edbb1b2e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('lada:', 3)"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["'kia:', kia.number_of_wheels"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Oj-h7eneLiDK","executionInfo":{"status":"ok","timestamp":1674990083790,"user_tz":-180,"elapsed":187,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"a02dca8e-3b0a-4c50-dd9f-af77950382a7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('kia:', 4)"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["Car.number_of_wheels = 5 #меняем количество колеc в самом классе на 5\n","'lada:', lada.number_of_wheels #у лады осталось 3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZD6yq0yeLh6N","executionInfo":{"status":"ok","timestamp":1674990105652,"user_tz":-180,"elapsed":220,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"bd2bcf44-6cfb-499c-bca3-938d1b23340a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('lada:', 3)"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["'kia:', kia.number_of_wheels #у киа заменилось на 5 потому что поменяли в классе на 5\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GOgZMQKVLn5g","executionInfo":{"status":"ok","timestamp":1674990129891,"user_tz":-180,"elapsed":191,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"292cebcf-5359-4a27-9189-46c00ff932ae"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('kia:', 5)"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":[],"metadata":{"id":"hG8MCW4hLn2N"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"-zTlchK5Lny9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 2. Создайте класс с 2мя статическим и 2мя динамическими и 2мя классовми метадами."],"metadata":{"id":"WYHdvX5EeVkM"}},{"cell_type":"code","source":["class MyClass:\n","    static_attribute1 = \"I am a static attribute\"\n","    static_attribute2 = \"static attribute\"\n","\n","    def __init__(self, dynamic_attribute1, dynamic_attribute2):\n","        self.dynamic_attribute1 = dynamic_attribute1\n","        self.dynamic_attribute2 = dynamic_attribute2\n","\n","    @classmethod\n","    def class_method(self, x: int, y: int):\n","        self.x = x\n","        self.y = y\n","        return x*y/8\n","        \n","a = MyClass\n","a.class_method(1,4)"],"metadata":{"id":"1m8WHmzNedkg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1675161696343,"user_tz":-180,"elapsed":24,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"d67a5ff7-4dcb-421e-dcea-c4e2ba14afad"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["MyClass.class_method(12, 35)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TXplcYXUQDq8","executionInfo":{"status":"ok","timestamp":1675008374475,"user_tz":-180,"elapsed":231,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"47d29bc2-4b36-4e85-cdd4-4d83a2d00125"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["52.5"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["a.static_attribute2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"jrlxMu59OWgj","executionInfo":{"status":"ok","timestamp":1675161718387,"user_tz":-180,"elapsed":336,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"d7b35882-1f57-48cb-96f8-4d6b67d68e8b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'static attribute'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["a.__dict__"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XwKdccyMQ3cR","executionInfo":{"status":"ok","timestamp":1675008420489,"user_tz":-180,"elapsed":251,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"4c787936-1d7e-4412-c377-7a1b5f44dd6a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["mappingproxy({'__module__': '__main__',\n","              'static_attribute': 'I am a static attribute',\n","              '__init__': <function __main__.MyClass.__init__(self, dynamic_attribute1, dynamic_attribute2)>,\n","              'class_method': <classmethod at 0x7f77b4ace2e0>,\n","              '__dict__': <attribute '__dict__' of 'MyClass' objects>,\n","              '__weakref__': <attribute '__weakref__' of 'MyClass' objects>,\n","              '__doc__': None,\n","              'x': 5,\n","              'y': 20})"]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["### 3. Создайте класс у которого статические атрибуты будут становиться динамическими при создании объекта."],"metadata":{"id":"cI5Luaz8edyC"}},{"cell_type":"code","source":["class MyClass:\n","    static_var = 0\n","    \n","    def __init__(self):\n","        self.static_var += 1\n","        \n","    @property\n","    def dynamic_var(self):\n","        return self.static_var\n","        \n","obj1 = MyClass()\n","obj1.dynamic_var"],"metadata":{"id":"s-uUntNsfIYq","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1675011328828,"user_tz":-180,"elapsed":229,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"7737a960-7fac-444b-a20d-5d575fc72557"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["obj2 = MyClass()\n","obj2.dynamic_var"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3SldntZpV-7u","executionInfo":{"status":"ok","timestamp":1675011330193,"user_tz":-180,"elapsed":2,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"8e8c4ea5-8c76-4db2-cef5-ea71e2432a20"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":[],"metadata":{"id":"Z2dZ6_vgV-0f"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 4. Создайте класс-объект который не сможет производить другие обекты."],"metadata":{"id":"lcLVggsdfKTk"}},{"cell_type":"code","source":["#singlton стирильный класс\n"],"metadata":{"id":"Gw5VnWplfXoo","executionInfo":{"status":"ok","timestamp":1675248514444,"user_tz":-180,"elapsed":244,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}}},"execution_count":36,"outputs":[]},{"cell_type":"markdown","source":["### 5. Создайте класс внутри класса. Зачем вы это сделали? Как теперь работать? Продемонстрируйте как обращатся к классу который внутри снаружи и изнутри класса."],"metadata":{"id":"7F5CkPusfaKb"}},{"cell_type":"code","source":[],"metadata":{"id":"sp0ypaJkfqfk"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 6. Создайте класс в котором бы логично применялось @prorerty."],"metadata":{"id":"S7HUc6xQfsaH"}},{"cell_type":"code","source":[],"metadata":{"id":"SRM1bd9Xf2PP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 7. Приведите пример композиционного подхода."],"metadata":{"id":"SqrGtYVSf3KU"}},{"cell_type":"code","source":[],"metadata":{"id":"5dhupyUigFrm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 8. Создайте рабочий миксин и продемонстрируйте его работу?"],"metadata":{"id":"uHbOgGv6gIDq"}},{"cell_type":"code","source":["class A:\n","    p1 = 5\n","class B:\n","    p2 = 10\n","class C(B, A):\n","    def f(self):\n","        return self.p1 + self.p2\n","\n","C().f()   # С это типичный миксин который сам по себе бесполезный класс, не может сам жить\n"],"metadata":{"id":"0izYzQXwgQg2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1675162428769,"user_tz":-180,"elapsed":11,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"eec7ee7f-5a07-4041-d037-c857e67d8646"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["15"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["### 9. Есть 2 родителя у одного преобладают карие глаза а у другого чёрные \n","волосы. Создайте наследника которые будет перенемать именно жти черты. "],"metadata":{"id":"S2UopEI-gQuT"}},{"cell_type":"code","source":["class ParentOne:\n","\n","    eyes = \"Brown\" \n","    hair = \"Bald\"\n","\n","\n","class ParentTwo:\n","\n","    eyes = \"Blue\" \n","    hair = \"Black\"\n","\n","\n","class Children(ParentOne, ParentTwo):\n","    pass"],"metadata":{"id":"ZDbrwt4agmvP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class Tree(object):\n","     def __init__(self, kind, height):\n","         self.kind = kind\n","         self.age = 0\n","         self.height = height\n"," \n","     def info(self):\n","         \"\"\" Метод вывода информации о дереве \"\"\"\n","         print (\"{} years old {}. {} meters high.\".format(self.age, self.kind, self.height))    \n"," \n","     def grow(self):\n","        \"\"\" Метод роста \"\"\"\n","        self.age += 1\n","        self.height += 0.5\n","\n","tree_1 = Tree(\"birne\", 0.5)\n","tree_1.grow()\n","tree_1.info()\n","tree_1.grow()\n","tree_1.info()\n","\n"],"metadata":{"id":"Zy1DU5SegKlZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1675183983080,"user_tz":-180,"elapsed":244,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"d9c1c708-8303-4d15-b166-d6c2f597ed01"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 years old birne. 1.0 meters high.\n","2 years old birne. 1.5 meters high.\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"qupfeYPFgonL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class FruitTree(Tree):\n","    def __init__(self, kind, height):\n","        # Необходимо вызвать метод инициализации родителя.\n","        # В Python 3.x это делается при помощи функции super()\n","        super().__init__(kind, height)\n"," \n","    def give_fruits(self):\n","        print (f\"Collected 20kg of {self.kind}\")\n","\n","#Создадим экземпляр класса FruitTree:\n","tree_2 = FruitTree(\"banane\", 1.4)\n","# у нас есть доступ к методам родителя\n","tree_2.info()\n","tree_2.grow()\n","tree_2.info()\n","tree_2.grow()\n","tree_2.info()\n","# Мы можем использовать свой метод\n","tree_2.give_fruits()\n","# А для родительского экземпляра метод give_fruits() недоступен\n","tree_1.give_fruits() # Вызовет ошибку"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"DPURI-7etH28","executionInfo":{"status":"error","timestamp":1675184245318,"user_tz":-180,"elapsed":238,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"67de5cde-3094-4de2-ef8e-32009a2e7181"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0 years old banane. 1.4 meters high.\n","1 years old banane. 1.9 meters high.\n","2 years old banane. 2.4 meters high.\n","Collected 20kg of banane\n"]},{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-41-3b018e12b134>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     19\u001b[0m \u001b[0mtree_2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgive_fruits\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m \u001b[0;31m# А для родительского экземпляра метод give_fruits() недоступен\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 21\u001b[0;31m \u001b[0mtree_1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgive_fruits\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# Вызовет ошибку\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mAttributeError\u001b[0m: 'Tree' object has no attribute 'give_fruits'"]}]},{"cell_type":"markdown","source":["### 10. Создайте класс который не способен создавать обекты"],"metadata":{"id":"wSk4DcNAiiWM"}},{"cell_type":"code","source":[],"metadata":{"id":"ut9NI4NLiurL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 11*. Создать класс который способен производить разные типы объектов в зависимости от заданного параметра "],"metadata":{"id":"KAaUDD3jkr_A"}},{"cell_type":"code","source":[],"metadata":{"id":"vrIiJ1OolLMQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 12**. Создать класс ДЕКОРАТОР!!!!"],"metadata":{"id":"BoWhgm2vlLU_"}},{"cell_type":"code","source":["class MyDecorator:\n","    def __init__(self, func):\n","        self.func = func\n","\n","    def __call__(self, *args, **kwargs):\n","        print(\"Декоратор для my_function\")\n","        self.func(*args, **kwargs)\n","\n","@MyDecorator\n","def my_function():\n","    print(\"Моя My function\")\n","\n","my_function()"],"metadata":{"id":"x990YVuylRLS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1675247873572,"user_tz":-180,"elapsed":233,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"464cd299-503e-4e2d-8007-92d4a730bb1e"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["Декоратор для my_function\n","Моя My function\n"]}]},{"cell_type":"markdown","source":["## **General topics**"],"metadata":{"id":"az15MDX6l0TA"}},{"cell_type":"markdown","source":["### 1. Обясните мне что это такое?"],"metadata":{"id":"05kS77ixl5n9"}},{"cell_type":"code","source":["a: int = None\n","'''a: int = None это объявление переменной a с типом int и присвоение ей значения None.\n","None является специальным значением в Python, которое используется для обозначения отсутствия значения. \n","Присваивание переменной None может использоваться, например, для инициализации переменной до того, \n","как она получит какое-либо другое значение.'''"],"metadata":{"id":"MdVMxxjLl_NL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 2. Напишите примеры всех областей видимости в python  "],"metadata":{"id":"rNvrXarsmEnK"}},{"cell_type":"code","source":["#1.Глобальная область видимости:\n","x = 10 # глобальная переменная\n","\n","def my_func():\n","    print(x) # можно использовать глобальную переменную x\n","\n","my_func() # выведет 10\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VK5i4Xt2g41K","executionInfo":{"status":"ok","timestamp":1675247221890,"user_tz":-180,"elapsed":331,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"485e762d-5bd8-402e-f574-da35cd9ef9fa"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n"]}]},{"cell_type":"code","source":["#Локальная область видимости:\n","def my_func():\n","    x = 5 # локальная переменная\n","    print(x)\n","\n","my_func() # выведет 5\n","print(x) # вызовет ошибку, переменная x не определена\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5ulQ8v8Jg4xs","executionInfo":{"status":"ok","timestamp":1675247225439,"user_tz":-180,"elapsed":311,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"de6b2967-dd85-4e45-e14a-cccfd5bad3f8"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["5\n","10\n"]}]},{"cell_type":"code","source":["#Область видимости внутри класса:\n","class MyClass:\n","    x = 10 # атрибут класса\n","\n","    def my_method(self):\n","        print(self.x) # можно использовать атрибут класса\n","\n","obj = MyClass()\n","obj.my_method() # выведет 10\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pIlUTXOEg4uN","executionInfo":{"status":"ok","timestamp":1675247379713,"user_tz":-180,"elapsed":260,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"47ae0f72-354d-4208-820b-7d1f9db6aa16"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n"]}]},{"cell_type":"code","source":["#Область видимости внутри функции:\n","def my_func():\n","    x = 10\n","    def inner_func():\n","        print(x) # можно использовать локальную переменную x\n","    inner_func()\n","\n","my_func() # выведет 10"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wPGvC0uCg4qf","executionInfo":{"status":"ok","timestamp":1675247431716,"user_tz":-180,"elapsed":18,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"bf9958f3-19bc-4f79-a3ab-75a5419f3c0c"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n"]}]},{"cell_type":"code","source":["#Область видимости через global:\n","x = 5\n","\n","def my_func():\n","    global x # указываем, что будем использовать глобальную переменную x\n","    x = 10\n","    print(x)\n","\n","my_func() # выведет 10"],"metadata":{"id":"ivWO-1yRmPhy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1675247476381,"user_tz":-180,"elapsed":256,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"ec5d7115-fd4f-48a3-c754-47c49cb8f09b"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n"]}]},{"cell_type":"markdown","source":["### 3. Приведите пример импорта сразу целой кучи всего из одного модуля при том что бы длинна строки не была привышена."],"metadata":{"id":"ENvJqJqImPoh"}},{"cell_type":"code","source":["#Можно импортировать все элементы из модуля с помощью конструкции from module_name import *.\n","#Однако, этот подход не рекомендуется, так как он может вызвать конфликты имен в случае, \n","#если другой модуль также содержит одноименные элементы."],"metadata":{"id":"I2NvtPCimeZh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 4. Какой из приведённых ниже примеров на ваш взгляд наиболее верный. Почему? "],"metadata":{"id":"oWwmsl0smf5B"}},{"cell_type":"code","source":["import time, random, datetime, math, pandas #лучше первое\n","\n","import time\n","import random\n","import datetime\n","import math\n","import pandas\n","\n","from time import * #не будет доступно основное слово math допустим, а только все методы и так можем если из своего модуля импортируем\n","from random import *\n","from datetime import *\n","from math import *\n","from pandas import *"],"metadata":{"id":"aPXfyHaomyE_","colab":{"base_uri":"https://localhost:8080/","height":148},"executionInfo":{"status":"error","timestamp":1675247678660,"user_tz":-180,"elapsed":242,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}},"outputId":"c8d12af2-8fd1-47e8-bcac-6b784e8cc5db"},"execution_count":30,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-30-537406faf0e3>\"\u001b[0;36m, line \u001b[0;32m9\u001b[0m\n\u001b[0;31m    from time import * не будет доступно основное слово math допустим, а только все методы и так можем если из своего модуля импортируем\u001b[0m\n\u001b[0m                       ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"markdown","source":["### 5. Как понять каких принципов придерживается python?"],"metadata":{"id":"Cbf2FmdRnoes"}},{"cell_type":"code","source":["#1/Python придерживается следующих принципов:\n","#2/Простота и читаемость кода: Python имеет ясный и простой синтаксис, который легко читать и понимать.\n","#3/Все является объектом: в Python все, включая функции, модули, типы данных и т.д., является объектом.\n","#4/Динамическая типизация: Python использует динамическую типизацию, что означает, что тип переменной определяется \n","#во время выполнения, а не во время компиляции.\n","#5/Батарейки входят в комплект: Python включает в себя большой стандартный набор библиотек, таких как os, sys и другие, что позволяет разработчикам не писать огромные количества кода.\n","#6/Ориентированный на объекты: Python является объектно-ориентированным языком, то есть подход к программированию основан на определении"],"metadata":{"id":"D6HWvMR7nxNY","executionInfo":{"status":"ok","timestamp":1675247890686,"user_tz":-180,"elapsed":236,"user":{"displayName":"Светлана Черкас","userId":"06424018220886691903"}}},"execution_count":35,"outputs":[]},{"cell_type":"markdown","source":["### 6. Представим, работаете вы такие на проекте. Сделали такие таску. Пора заливать изменения. Ваши действия?"],"metadata":{"id":"SfEaf1gFnxdc"}},{"cell_type":"code","source":[],"metadata":{"id":"t3izxttOpF_o"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 7. Напишите функцию которая будет менять кодировку файла."],"metadata":{"id":"alWnieFlpGUg"}},{"cell_type":"code","source":[],"metadata":{"id":"ec7w4lJqtszt"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 8. Олег часто буянит в баре и вам поручили создать исключение OlegError что бы в будущем каждый раз вызывать его а не ждать пока он опять что нибудь разобъёт."],"metadata":{"id":"a0U1yL6btr7a"}},{"cell_type":"code","source":[],"metadata":{"id":"ksqvdgGbvLjQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 9. Как заставить код запускаться только в случае запуска того файла где он находится. Напишите пример."],"metadata":{"id":"mwolhKvNvOIt"}},{"cell_type":"code","source":[],"metadata":{"id":"3BSA5V5Ivga4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 10. Опишите в 2х словах что такое venv, нужно ли нам это вообще, и как оно создаётся."],"metadata":{"id":"BBlL0QvSvgjW"}},{"cell_type":"code","source":[],"metadata":{"id":"j8JgUOoRv3Zc"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 11*. Напишите программу которая бы принимала бы определённые параметры,создавала скрипты.py по этим параметрам, и запускала бы их. Пример вызова."],"metadata":{"id":"sZWgQwhSv3yN"}},{"cell_type":"markdown","source":["\n","\n","```\n","python generate_script hello_world\n","\n","```\n","\n","\n","появляется файл hello_world.py в котором уже есть код который у нас привязан к параметру hello_world и это скрипт должен быть запущен нашей программой."],"metadata":{"id":"5bl2t0FUxHig"}},{"cell_type":"markdown","source":["### 12**. Установите себе нормальную операционную систему в конце-то концов!"],"metadata":{"id":"G1bhmdNixiKM"}},{"cell_type":"code","source":[],"metadata":{"id":"CdSyvwr5xs_N"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# *Resuls*"],"metadata":{"id":"3GrDnA68yDPo"}},{"cell_type":"markdown","source":["* задачи без \"*\" - 1.5% за штуку\n","* задачи с \"*\" - 2% за штуку\n","* задачи с \"**\" - 3% за ̶л̶у̶к̶а̶ш̶е̶н̶к̶о̶ штуку"],"metadata":{"id":"KQehLgLxyGdW"}},{"cell_type":"markdown","source":["Вы прошли тест успешно если смогли набрать больше 70% балов."],"metadata":{"id":"vP1Dudcm1pr6"}},{"cell_type":"markdown","source":["Код ниже считает сколько вы там нарешали. Можно модернизировать при большом желании:"],"metadata":{"id":"ehxIJE45zGQ4"}},{"cell_type":"code","source":["import random\n","easy = 0\n","medium = 0\n","hard = 0\n","\n","def get_result(easy=0, medium=0, hard=0):\n","    assert 0 <= easy <= 75\n","    assert 0 <= medium <= 10\n","    assert 0 <= hard <= 10\n","    result = easy * 1.5 + medium * 2 + hard * 3\n","    assert result >= 70, \"Давайте перешчытаем!!!\"\n","    return f\"Поздравляю вы набрали {round(result + random.random(),1)}% это лучше чем {random.randint(0, 999)/10}% учеником\"\n","\n","get_result(easy, medium, hard)"],"metadata":{"id":"86urmxtHzQIU"},"execution_count":null,"outputs":[]}]}