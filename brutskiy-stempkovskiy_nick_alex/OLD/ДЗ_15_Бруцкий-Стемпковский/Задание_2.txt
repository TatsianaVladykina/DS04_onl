Классификация изоражений.

1. Среди имеющихся изображений имеется 3 вида:
	- яблоки
	- апельсины
	- мячи
Необходимо слелать нейронную сеть, которая сможет их классифицировать.
Пока делать этого мы конечно не будем..)) Но порассуждаем.

2.Как бы здесь не было, изображение нужно разметить. Вручную сделать текстовый файл, 
например, в котором будет всё расписано по категориям:
      яблоки апельсины мячи
img1	1	0	0
img2	0	1	0
img3	0	0	1
...

3. Есть нейронки, которые определяют на фото фон и объект, но это пока не наш путь.
Поэтому изображения нужно привести к одному размеру. И еще много чего вообще..

4. Однако не будем торопиться и объединим эту задачу со следующей. Приведенных изображений 
довольно мало. И это вполне реальная проблема. Поэтому к имеющимся уже размеченным изображениям
можно добавить искаженных. Они будут содержать всё те же объекты, но будут уже иными.
Искажать можно:
	- Вращением
	- Сжатием/растяжением
	- Масштабированием
	- Добавление шума (соль-перец)
Всё это зовётся аугментацией изображений.
Исходные и искаженые изображения должны быть приведены к одному размеру (128*128 например).


''''''''''''''''''''''''''''''
Дополнение, на которое натолкнул Сергей. Изображений мало. Потому имеет смысл вручную проконтролировать перед аугментацией,
чтобы в тренировочную выборку попали изображения всех категорий.
''''''''''''''''''''''''''''''

5. Для работы с изображениями применяются свёрточные нейронные сети. Они работают не с отдельными 
пикселями изображения (или тремя пикселями в трех слоях RGB), а с шаблонами пикселей, получаемыми
свёртками из исходных изображений. Потому что самые интересные элементы на изобраениях находятся не на определенных местах,
а как бы на небольших участках, но размещенных в разных местах изоражения. По изображению перемещают "окно", над значениями, попавшими
в "окно", выполняют математическое преобразование (в книге Сета Вейдмана приводится перемножение значений, попавших в окно,
на соответствующие веса, матрица весов называется фильтром) и получают уже одну числовую характеристику.
Существуют небольшие различия в подходах (различный размер окна, размер шага, дозаполнение нулями), 
но суть в том, что свёртка позволяет вычленять из исходного изображения более высокоуровневые объеткы. 
Таким образом из исходного изображения получается карта признаков. Размером почти такая же, как и само изобржаение, 
но немного меньше. Как я понял, карта признаков показывает "степень присутствия" шаблона, определяемого фильтром, 
на исходном изображении. Такая опереция может быть выполнена повторно, в таком случае получим карту присутствия 
шаблонов шаблонов на исходном изображении. Формально таких карт пока еще три (по величине глубины).
Далее можно применить flatten-преобразование, которое преобразует трехмерную матрицу (глубина три цвета * ширина * высота)
в одномерную матрицу (вектор). Перед этим мог также быть использован пуллинг, который понижает качество карты признаков.
Действие пуллинга можно описать как взятие самого ярокого пикселя например из 4 смежных. (хотя физический смысл карты 
признаков более сложный). Фактор многоканальности я опустил. Он добавляет как бы 4-е измерение и представляет собой то, 
что на вход идёт не одна картинка, а целый стек. Веренемся к вектору. Данный вектор пропускают через нелинейную функцию
со случайными весами и добавляют смещение. Результаты алгераического преообразования над значениями
вектора скалдывают с учётом весов и получают одно число. На выходе нас поджидает "правильное" число, так как изображения мы разметили.
Вычисляем разницы между предсказанием и фактом и в процессе обратного прохода корректируем все рандомно инициированные веса и коэффициенты.
Повторяем. В кратце, это моё преставление о том, как должна работать такая нейронная сеть. Спасибо за внимание.